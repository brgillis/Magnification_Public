.TH "/disk2/brg/git/Magnification_Public/src/lib/IceBRG_lensing/two_halo_term_methods.hpp" 3 "Thu Jul 9 2015" "Version 0.9.2" "CFHTLenS_Magnification" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/disk2/brg/git/Magnification_Public/src/lib/IceBRG_lensing/two_halo_term_methods.hpp \- 
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDECLARE_LENSING_EXTENSION_STATIC_VARS\fP()   static \fBIceBRG::interpolator\fP _rho_tilde_cache_;"
.br
.ti -1c
.RI "#define \fBDEFINE_LENSING_EXTENSION_STATIC_VARS\fP(class_name)   \fBflt_type\fP IceBRG::class_name::_rho_tilde_cache_;"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fB_cache_rho_tilde\fP () const "
.br
.ti -1c
.RI "void \fB_ensure_rho_tilde_cached\fP () const "
.br
.ti -1c
.RI "\fBflt_type\fP \fB_y\fP (const \fBflt_type\fP &k) const "
.br
.ti -1c
.RI "\fBflt_type\fP \fB_two_halo_power_spectrum\fP (const \fBflt_type\fP &k) const "
.br
.ti -1c
.RI "\fBflt_type\fP \fB_two_halo_ps_integral\fP (const \fBflt_type\fP &k) const "
.br
.ti -1c
.RI "\fBflt_type\fP \fB_sigma\fP (\fBflt_type\fP m)"
.br
.ti -1c
.RI "\fBflt_type\fP \fB_nu_of_m\fP (\fBflt_type\fP m)"
.br
.ti -1c
.RI "\fBflt_type\fP \fBrho_tilde\fP (const \fBflt_type\fP &k) const "
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DECLARE_LENSING_EXTENSION_STATIC_VARS()   static \fBIceBRG::interpolator\fP _rho_tilde_cache_;"

.SS "#define DEFINE_LENSING_EXTENSION_STATIC_VARS(class_name)   \fBflt_type\fP IceBRG::class_name::_rho_tilde_cache_;"

.SH "Function Documentation"
.PP 
.SS "void _cache_rho_tilde () const"

.SS "void _ensure_rho_tilde_cached () const"

.SS "\fBflt_type\fP _nu_of_m (\fBflt_type\fPm)\fC [inline]\fP"

.SS "\fBflt_type\fP _sigma (\fBflt_type\fPm)\fC [inline]\fP"

.SS "\fBflt_type\fP _two_halo_power_spectrum (const \fBflt_type\fP &k) const"

.SS "\fBflt_type\fP _two_halo_ps_integral (const \fBflt_type\fP &k) const"

.SS "\fBflt_type\fP _y (const \fBflt_type\fP &k) const"

.SS "\fBflt_type\fP rho_tilde (const \fBflt_type\fP &k) const"

.SH "Author"
.PP 
Generated automatically by Doxygen for CFHTLenS_Magnification from the source code\&.
