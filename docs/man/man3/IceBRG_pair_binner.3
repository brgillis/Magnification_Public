.TH "IceBRG::pair_binner" 3 "Thu Jul 9 2015" "Version 0.9.2" "CFHTLenS_Magnification" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IceBRG::pair_binner \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <pair_binner\&.h>\fP
.PP
Inherits \fBIceBRG::pair_bins_summary\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBpair_binner\fP ()"
.br
.ti -1c
.RI "\fBpair_binner\fP (\fBIceBRG::limit_vector\fP< \fBdistance_type\fP > R_bin_limits, \fBIceBRG::limit_vector\fP< \fBmass_type\fP > m_bin_limits=\fBIceBRG::limit_vector\fP< \fBmass_type\fP >(), \fBIceBRG::limit_vector\fP< \fBflt_type\fP > z_bin_limits=\fBIceBRG::limit_vector\fP< \fBflt_type\fP >(), \fBIceBRG::limit_vector\fP< \fBflt_type\fP > mag_bin_limits=\fBIceBRG::limit_vector\fP< \fBflt_type\fP >())"
.br
.ti -1c
.RI "\fBpair_binner\fP (const \fBdistance_type\fP &R_min, const \fBdistance_type\fP &R_max, const \fBssize_t\fP &R_bins, const \fBmass_type\fP &m_min=-std::numeric_limits< \fBflt_type\fP >::infinity()*\fBkg\fP, const \fBmass_type\fP &m_max=std::numeric_limits< \fBflt_type\fP >::infinity()*\fBkg\fP, const \fBssize_t\fP &m_bins=1, const \fBflt_type\fP &z_min=-std::numeric_limits< \fBflt_type\fP >::infinity(), const \fBflt_type\fP &z_max=std::numeric_limits< \fBflt_type\fP >::infinity(), const \fBssize_t\fP &\fBz_bins\fP=1, const \fBflt_type\fP &mag_min=-std::numeric_limits< \fBflt_type\fP >::infinity(), const \fBflt_type\fP &mag_max=std::numeric_limits< \fBflt_type\fP >::infinity(), const \fBssize_t\fP &mag_bins=1)"
.br
.ti -1c
.RI "virtual \fB~pair_binner\fP ()"
.br
.ti -1c
.RI "void \fBset_z_buffer\fP (const \fBflt_type\fP &new_z_buffer)"
.br
.ti -1c
.RI "\fBflt_type\fP \fBz_buffer\fP () const "
.br
.ti -1c
.RI "bool \fBbinnable\fP (const \fBgalaxy\fP &lens) const "
.br
.ti -1c
.RI "void \fBadd_pair\fP (const \fBlens_source_pair\fP &new_pair)"
.br
.ti -1c
.RI "void \fBadd_lens_id\fP (const \fBssize_t\fP &new_lens_id, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag, const \fBflt_type\fP &weight=1)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "void \fBempty\fP ()"
.br
.ti -1c
.RI "void \fBsort\fP () const "
.br
.ti -1c
.RI "template<typename Tv1 , typename Tv2 > void \fBset_unmasked_fractions\fP (Tv1 &&bin_limits, Tv2 &&unmasked_fractions)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_t_mean_for_bin\fP (\fBssize_t\fP R_i, \fBssize_t\fP m_i, \fBssize_t\fP z_i, \fBssize_t\fP mag_i)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_x_mean_for_bin\fP (\fBssize_t\fP R_i, \fBssize_t\fP m_i, \fBssize_t\fP z_i, \fBssize_t\fP mag_i)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_t_std_for_bin\fP (\fBssize_t\fP R_i, \fBssize_t\fP m_i, \fBssize_t\fP z_i, \fBssize_t\fP mag_i)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_x_std_for_bin\fP (\fBssize_t\fP R_i, \fBssize_t\fP m_i, \fBssize_t\fP z_i, \fBssize_t\fP mag_i)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_t_stderr_for_bin\fP (\fBssize_t\fP R_i, \fBssize_t\fP m_i, \fBssize_t\fP z_i, \fBssize_t\fP mag_i)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_x_stderr_for_bin\fP (\fBssize_t\fP R_i, \fBssize_t\fP m_i, \fBssize_t\fP z_i, \fBssize_t\fP mag_i)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_t_mean_for_bin\fP (const \fBdistance_type\fP &R, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_x_mean_for_bin\fP (const \fBdistance_type\fP &R, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_t_std_for_bin\fP (const \fBdistance_type\fP &R, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_x_std_for_bin\fP (const \fBdistance_type\fP &R, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_t_stderr_for_bin\fP (const \fBdistance_type\fP &R, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"
.br
.ti -1c
.RI "\fBsurface_density_type\fP \fBdelta_Sigma_x_stderr_for_bin\fP (const \fBdistance_type\fP &R, const \fBmass_type\fP &\fBm\fP, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "IceBRG::pair_binner::pair_binner ()\fC [inline]\fP"

.SS "IceBRG::pair_binner::pair_binner (\fBIceBRG::limit_vector\fP< \fBdistance_type\fP >R_bin_limits, \fBIceBRG::limit_vector\fP< \fBmass_type\fP >m_bin_limits = \fC\fBIceBRG::limit_vector\fP<\fBmass_type\fP>()\fP, \fBIceBRG::limit_vector\fP< \fBflt_type\fP >z_bin_limits = \fC\fBIceBRG::limit_vector\fP<\fBflt_type\fP>()\fP, \fBIceBRG::limit_vector\fP< \fBflt_type\fP >mag_bin_limits = \fC\fBIceBRG::limit_vector\fP<\fBflt_type\fP>()\fP)\fC [inline]\fP"

.SS "IceBRG::pair_binner::pair_binner (const \fBdistance_type\fP &R_min, const \fBdistance_type\fP &R_max, const \fBssize_t\fP &R_bins, const \fBmass_type\fP &m_min = \fC-std::numeric_limits<\fBflt_type\fP>::infinity()*\fBkg\fP\fP, const \fBmass_type\fP &m_max = \fCstd::numeric_limits<\fBflt_type\fP>::infinity()*\fBkg\fP\fP, const \fBssize_t\fP &m_bins = \fC1\fP, const \fBflt_type\fP &z_min = \fC-std::numeric_limits<\fBflt_type\fP>::infinity()\fP, const \fBflt_type\fP &z_max = \fCstd::numeric_limits<\fBflt_type\fP>::infinity()\fP, const \fBssize_t\fP &z_bins = \fC1\fP, const \fBflt_type\fP &mag_min = \fC-std::numeric_limits<\fBflt_type\fP>::infinity()\fP, const \fBflt_type\fP &mag_max = \fCstd::numeric_limits<\fBflt_type\fP>::infinity()\fP, const \fBssize_t\fP &mag_bins = \fC1\fP)\fC [inline]\fP"

.SS "virtual IceBRG::pair_binner::~pair_binner ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void IceBRG::pair_binner::add_lens_id (const \fBssize_t\fP &new_lens_id, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag, const \fBflt_type\fP &weight = \fC1\fP)"

.SS "void IceBRG::pair_binner::add_pair (const \fBlens_source_pair\fP &new_pair)"

.SS "bool IceBRG::pair_binner::binnable (const \fBgalaxy\fP &lens) const"

.SS "void IceBRG::pair_binner::clear ()\fC [virtual]\fP"

.PP
Reimplemented from \fBIceBRG::pair_bins_summary\fP\&.
.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_t_mean_for_bin (\fBssize_t\fPR_i, \fBssize_t\fPm_i, \fBssize_t\fPz_i, \fBssize_t\fPmag_i)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_t_mean_for_bin (const \fBdistance_type\fP &R, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_t_std_for_bin (\fBssize_t\fPR_i, \fBssize_t\fPm_i, \fBssize_t\fPz_i, \fBssize_t\fPmag_i)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_t_std_for_bin (const \fBdistance_type\fP &R, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_t_stderr_for_bin (\fBssize_t\fPR_i, \fBssize_t\fPm_i, \fBssize_t\fPz_i, \fBssize_t\fPmag_i)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_t_stderr_for_bin (const \fBdistance_type\fP &R, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_x_mean_for_bin (\fBssize_t\fPR_i, \fBssize_t\fPm_i, \fBssize_t\fPz_i, \fBssize_t\fPmag_i)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_x_mean_for_bin (const \fBdistance_type\fP &R, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_x_std_for_bin (\fBssize_t\fPR_i, \fBssize_t\fPm_i, \fBssize_t\fPz_i, \fBssize_t\fPmag_i)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_x_std_for_bin (const \fBdistance_type\fP &R, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_x_stderr_for_bin (\fBssize_t\fPR_i, \fBssize_t\fPm_i, \fBssize_t\fPz_i, \fBssize_t\fPmag_i)"

.SS "\fBsurface_density_type\fP IceBRG::pair_binner::delta_Sigma_x_stderr_for_bin (const \fBdistance_type\fP &R, const \fBmass_type\fP &m, const \fBflt_type\fP &z, const \fBflt_type\fP &mag)"

.SS "void IceBRG::pair_binner::empty ()"

.SS "template<typename Tv1 , typename Tv2 > void IceBRG::pair_binner::set_unmasked_fractions (Tv1 &&bin_limits, Tv2 &&unmasked_fractions)\fC [inline]\fP"

.SS "void IceBRG::pair_binner::set_z_buffer (const \fBflt_type\fP &new_z_buffer)\fC [inline]\fP"

.SS "void IceBRG::pair_binner::sort () const\fC [virtual]\fP"

.PP
Reimplemented from \fBIceBRG::pair_bins_summary\fP\&.
.SS "\fBflt_type\fP IceBRG::pair_binner::z_buffer () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for CFHTLenS_Magnification from the source code\&.
