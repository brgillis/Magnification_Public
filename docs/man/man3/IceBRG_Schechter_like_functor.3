.TH "IceBRG::Schechter_like_functor" 3 "Thu Jul 9 2015" "Version 0.9.2" "CFHTLenS_Magnification" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IceBRG::Schechter_like_functor \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Schechter_like_functor\&.h>\fP
.PP
Inherits \fBIceBRG::functor< flt_type, flt_type, std::vector< flt_type > >\fP, and \fBIceBRG::functor< flt_type, inverse_square_angle, tuple< inverse_square_angle, flt_type, flt_type, flt_type, inverse_square_angle, flt_type, flt_type > >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBflt_type\fP \fBfin_type\fP"
.br
.ti -1c
.RI "typedef \fBinverse_square_angle\fP \fBfout_type\fP"
.br
.ti -1c
.RI "typedef tuple
.br
< \fBinverse_square_angle\fP, 
.br
\fBflt_type\fP, \fBflt_type\fP, \fBflt_type\fP, 
.br
\fBinverse_square_angle\fP, \fBflt_type\fP, 
.br
\fBflt_type\fP > \fBparams_type\fP"
.br
.ti -1c
.RI "typedef \fBfunctor\fP< \fBflt_type\fP, 
.br
\fBinverse_square_angle\fP, 
.br
\fBparams_type\fP > \fBbase_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSchechter_like_functor\fP ()"
.br
.ti -1c
.RI "template<typename T > \fBSchechter_like_functor\fP (T &&init_params)"
.br
.ti -1c
.RI "virtual \fB~Schechter_like_functor\fP ()"
.br
.ti -1c
.RI "\fBinverse_square_angle\fP \fBN_scale\fP () const "
.br
.ti -1c
.RI "\fBflt_type\fP \fBm_star\fP () const "
.br
.ti -1c
.RI "\fBflt_type\fP \fBalpha\fP () const "
.br
.ti -1c
.RI "\fBflt_type\fP \fBmag_lower_lim_sharpness\fP () const "
.br
.ti -1c
.RI "\fBinverse_square_angle\fP \fBmag23_jump\fP () const "
.br
.ti -1c
.RI "\fBflt_type\fP \fBmag_upper_lim\fP () const "
.br
.ti -1c
.RI "\fBflt_type\fP \fBmag_upper_lim_sharpness\fP () const "
.br
.ti -1c
.RI "\fBfout_type\fP \fBoperator()\fP (const \fBfin_type\fP &in_params) const "
.br
.ti -1c
.RI "\fBSchechter_like_functor\fP ()"
.br
.ti -1c
.RI "\fBSchechter_like_functor\fP (const std::vector< \fBflt_type\fP > &init_params)"
.br
.ti -1c
.RI "virtual \fB~Schechter_like_functor\fP ()"
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBN_scale\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBm_star\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBalpha\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBmag_lower_lim_sharpness\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBmag23_jump\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBmag_upper_lim\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBmag_upper_lim_sharpness\fP () const "
.br
.ti -1c
.RI "\fBlong_flt_type\fP \fBoperator()\fP (const \fBlong_flt_type\fP &in_params) const "
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "typedef \fBfunctor\fP<\fBflt_type\fP, \fBinverse_square_angle\fP, \fBparams_type\fP> \fBIceBRG::Schechter_like_functor::base_type\fP"

.SS "typedef \fBflt_type\fP \fBIceBRG::Schechter_like_functor::fin_type\fP"

.SS "typedef \fBinverse_square_angle\fP \fBIceBRG::Schechter_like_functor::fout_type\fP"

.SS "typedef tuple<\fBinverse_square_angle\fP,\fBflt_type\fP,\fBflt_type\fP,\fBflt_type\fP, \fBinverse_square_angle\fP,\fBflt_type\fP,\fBflt_type\fP> \fBIceBRG::Schechter_like_functor::params_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "IceBRG::Schechter_like_functor::Schechter_like_functor ()\fC [inline]\fP"

.SS "template<typename T > IceBRG::Schechter_like_functor::Schechter_like_functor (T &&init_params)\fC [inline]\fP"

.SS "virtual IceBRG::Schechter_like_functor::~Schechter_like_functor ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "IceBRG::Schechter_like_functor::Schechter_like_functor ()\fC [inline]\fP"

.SS "IceBRG::Schechter_like_functor::Schechter_like_functor (const std::vector< \fBflt_type\fP > &init_params)\fC [inline]\fP"

.SS "virtual IceBRG::Schechter_like_functor::~Schechter_like_functor ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::alpha () const\fC [inline]\fP"

.SS "\fBflt_type\fP IceBRG::Schechter_like_functor::alpha () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::m_star () const\fC [inline]\fP"

.SS "\fBflt_type\fP IceBRG::Schechter_like_functor::m_star () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::mag23_jump () const\fC [inline]\fP"

.SS "\fBinverse_square_angle\fP IceBRG::Schechter_like_functor::mag23_jump () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::mag_lower_lim_sharpness () const\fC [inline]\fP"

.SS "\fBflt_type\fP IceBRG::Schechter_like_functor::mag_lower_lim_sharpness () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::mag_upper_lim () const\fC [inline]\fP"

.SS "\fBflt_type\fP IceBRG::Schechter_like_functor::mag_upper_lim () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::mag_upper_lim_sharpness () const\fC [inline]\fP"

.SS "\fBflt_type\fP IceBRG::Schechter_like_functor::mag_upper_lim_sharpness () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::N_scale () const\fC [inline]\fP"

.SS "\fBinverse_square_angle\fP IceBRG::Schechter_like_functor::N_scale () const\fC [inline]\fP"

.SS "\fBlong_flt_type\fP IceBRG::Schechter_like_functor::operator() (const \fBlong_flt_type\fP &in_params) const"

.SS "\fBSchechter_like_functor::fout_type\fP IceBRG::Schechter_like_functor::operator() (const \fBfin_type\fP &in_params) const\fC [virtual]\fP"

.PP
Implements \fBIceBRG::functor< flt_type, flt_type, std::vector< flt_type > >\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CFHTLenS_Magnification from the source code\&.
