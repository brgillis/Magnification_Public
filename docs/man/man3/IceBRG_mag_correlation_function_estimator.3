.TH "IceBRG::mag_correlation_function_estimator" 3 "Tue Jul 7 2015" "Version 0.9.0" "CFHTLenS_Magnification" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IceBRG::mag_correlation_function_estimator \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mag_correlation_function_estimator\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmag_correlation_function_estimator\fP ()"
.br
.RI "\fIDefault constructor\&. Will not be set up for calculation\&. \fP"
.ti -1c
.RI "template<typename T > \fBmag_correlation_function_estimator\fP (T &&D_bin_limits, const \fBflt_type\fP &\fBz_buffer\fP=0)"
.br
.RI "\fIConstruct with only bin limits\&. Will not set up for calculation\&. \fP"
.ti -1c
.RI "template<typename TR1 , typename TR2 , typename TM1 , typename TM2 > \fBmag_correlation_function_estimator\fP (TR1 &&D1_pos_list, TR2 &&D2_pos_list, TM1 &&R1_pos_list, TM2 &&R2_pos_list, const \fBflt_type\fP &\fBz_buffer\fP=0)"
.br
.RI "\fIConstruct with only position lists\&. \fP"
.ti -1c
.RI "template<typename T , typename TR1 , typename TR2 , typename TM1 , typename TM2 > \fBmag_correlation_function_estimator\fP (T &&D_bin_limits, TR1 &&D1_pos_list, TR2 &&D2_pos_list, TM1 &&R1_pos_list, TM2 &&R2_pos_list, const \fBflt_type\fP &\fBz_buffer\fP=0)"
.br
.RI "\fIConstruct with bin limits and position lists\&. \fP"
.ti -1c
.RI "virtual \fB~mag_correlation_function_estimator\fP ()"
.br
.ti -1c
.RI "Eigen::ArrayXd \fBcalculate\fP () const "
.br
.RI "\fIStandard calculation function, using Hamilton estimator\&. \fP"
.ti -1c
.RI "Eigen::ArrayXd \fBweights\fP () const "
.br
.RI "\fIGet bin weights for standard calculation function\&. \fP"
.ti -1c
.RI "Eigen::ArrayXd \fBerrors\fP () const "
.br
.RI "\fIGet errors for standard calculation function\&. \fP"
.ti -1c
.RI "Eigen::ArrayXd \fBcalculate_weighted\fP (const std::function< \fBflt_type\fP(\fBangle_type\fP)> &weight_function=[](const \fBangle_type\fP &theta){return 1\&.;}) const "
.br
.ti -1c
.RI "Eigen::ArrayXd \fBcalculate_dipole\fP (const \fBflt_type\fP &offset=0) const "
.br
.ti -1c
.RI "Eigen::ArrayXd \fBcalculate_quadrupole\fP (const \fBflt_type\fP &offset=0) const "
.br
.ti -1c
.RI "Eigen::ArrayXd \fBcalculate_octopole\fP (const \fBflt_type\fP &offset=0) const "
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "IceBRG::mag_correlation_function_estimator::mag_correlation_function_estimator ()\fC [inline]\fP"

.PP
Default constructor\&. Will not be set up for calculation\&. 
.SS "template<typename T > IceBRG::mag_correlation_function_estimator::mag_correlation_function_estimator (T &&D_bin_limits, const \fBflt_type\fP &z_buffer = \fC0\fP)\fC [inline]\fP"

.PP
Construct with only bin limits\&. Will not set up for calculation\&. 
.SS "template<typename TR1 , typename TR2 , typename TM1 , typename TM2 > IceBRG::mag_correlation_function_estimator::mag_correlation_function_estimator (TR1 &&D1_pos_list, TR2 &&D2_pos_list, TM1 &&R1_pos_list, TM2 &&R2_pos_list, const \fBflt_type\fP &z_buffer = \fC0\fP)\fC [inline]\fP"

.PP
Construct with only position lists\&. 
.SS "template<typename T , typename TR1 , typename TR2 , typename TM1 , typename TM2 > IceBRG::mag_correlation_function_estimator::mag_correlation_function_estimator (T &&D_bin_limits, TR1 &&D1_pos_list, TR2 &&D2_pos_list, TM1 &&R1_pos_list, TM2 &&R2_pos_list, const \fBflt_type\fP &z_buffer = \fC0\fP)\fC [inline]\fP"

.PP
Construct with bin limits and position lists\&. 
.SS "virtual IceBRG::mag_correlation_function_estimator::~mag_correlation_function_estimator ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::calculate () const"

.PP
Standard calculation function, using Hamilton estimator\&. 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::calculate_dipole (const \fBflt_type\fP &offset = \fC0\fP) const"
Calculation function for dipole correlation function with a given offset\&. The offset should vary from [0,1) or [-0\&.5,0\&.5) for unique results\&. 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::calculate_octopole (const \fBflt_type\fP &offset = \fC0\fP) const"
Calculation function for octopole correlation function with a given offset\&. The offset should vary from [0,1) or [-0\&.5,0\&.5) for unique results\&. 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::calculate_quadrupole (const \fBflt_type\fP &offset = \fC0\fP) const"
Calculation function for quadrupole correlation function with a given offset\&. The offset should vary from [0,1) or [-0\&.5,0\&.5) for unique results\&. 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::calculate_weighted () const"
Weighted calculation function, using a Hamilton-like estimator\&. This assumes the weight function passed here has an expected value of zero\&. 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::errors () const"

.PP
Get errors for standard calculation function\&. 
.SS "Eigen::ArrayXd IceBRG::mag_correlation_function_estimator::weights () const"

.PP
Get bin weights for standard calculation function\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for CFHTLenS_Magnification from the source code\&.
